spring:
  datasource:
    #配置h2数据库的连接地址
    # 文件模式：jdbc:h2:~/test 连接位于用户目录下的test数据库
    # 文件模式 win：jdbc:h2:file:F:\WorkSpace\MyGithub\java-base
    # 文件模式 mac：jdbc:h2:file:/data/sample
    # 内存模式：jdbc:h2:mem:<databaseName>  #其他参数DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
    url: jdbc:h2:mem:test
    #配置JDBC Driver
    driver-class-name: org.h2.Driver
    #配置数据库用户名
    username: root
    #配置数据库密码
    password: 123456
    #进行该配置，程序开启时就会启动h2 web consloe。当然这是默认的，如果你不想在启动程序时启动h2 web consloe，那么就设置为false。
    schema: classpath:db/schema-h2.sql
    data: classpath:db/data-h2.sql
  h2:
    console:
      enabled: true
      # 进行该配置，你就可以通过YOUR_URL/h2访问h2 web consloe。YOUR_URL是你程序的访问URl。默认为/h2-console
      # http://localhost:8080/h2-console
      path: /h2-console
      # 进行该配置后，h2 web consloe就可以在远程访问了。否则只能在本机访问。
      settings:
        web-allow-others: true
mybatis:
#mybatis-plus:
  #  type-aliases-package: com.aaa.h2.model
  mapper-locations: classpath:/mapper/*/*.xml,classpath:/mapper-h2/*/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl
    # 默认是开启二级缓存的
    cache-enabled: true
    #开启懒加载
    lazy-loading-enabled: true
    # 默认是false 表示按需加载
    aggressive-lazy-loading: false
#    configuration-factory: com.aaa.javabase.h2.UserMapperTest$ConfigurationFactory

# 自定义日志级别 （优先级低）
app:
  level: debug
# 通用的日志级别，指定某些包的级别 （优先级高）
# 如果 app.level 设置 info
# 而 logging.level.com.aaa.javabase.h2.mapper 设置 debug，那么此时debug依然会生效
logging:
  level:
    com.aaa.javabase.h2.mapper: debug
